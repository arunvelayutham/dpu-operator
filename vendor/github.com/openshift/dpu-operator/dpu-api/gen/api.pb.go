// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: api.proto

package dpu_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DpuMode       bool                   `protobuf:"varint,1,opt,name=dpu_mode,json=dpuMode,proto3" json:"dpu_mode,omitempty"`
	DpuIdentifier string                 `protobuf:"bytes,2,opt,name=dpu_identifier,json=dpuIdentifier,proto3" json:"dpu_identifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	mi := &file_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *InitRequest) GetDpuMode() bool {
	if x != nil {
		return x.DpuMode
	}
	return false
}

func (x *InitRequest) GetDpuIdentifier() string {
	if x != nil {
		return x.DpuIdentifier
	}
	return ""
}

type IpPort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IpPort) Reset() {
	*x = IpPort{}
	mi := &file_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IpPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpPort) ProtoMessage() {}

func (x *IpPort) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpPort.ProtoReflect.Descriptor instead.
func (*IpPort) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *IpPort) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *IpPort) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type NFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         string                 `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output        string                 `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NFRequest) Reset() {
	*x = NFRequest{}
	mi := &file_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NFRequest) ProtoMessage() {}

func (x *NFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NFRequest.ProtoReflect.Descriptor instead.
func (*NFRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *NFRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *NFRequest) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

type VfCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VfCnt         int32                  `protobuf:"varint,1,opt,name=vf_cnt,json=vfCnt,proto3" json:"vf_cnt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VfCount) Reset() {
	*x = VfCount{}
	mi := &file_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VfCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VfCount) ProtoMessage() {}

func (x *VfCount) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VfCount.ProtoReflect.Descriptor instead.
func (*VfCount) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *VfCount) GetVfCnt() int32 {
	if x != nil {
		return x.VfCnt
	}
	return 0
}

type TopologyInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          string                 `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopologyInfo) Reset() {
	*x = TopologyInfo{}
	mi := &file_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyInfo) ProtoMessage() {}

func (x *TopologyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyInfo.ProtoReflect.Descriptor instead.
func (*TopologyInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *TopologyInfo) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Health        string                 `protobuf:"bytes,2,opt,name=health,proto3" json:"health,omitempty"`
	Topology      *TopologyInfo          `protobuf:"bytes,3,opt,name=topology,proto3" json:"topology,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *Device) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Device) GetHealth() string {
	if x != nil {
		return x.Health
	}
	return ""
}

func (x *Device) GetTopology() *TopologyInfo {
	if x != nil {
		return x.Topology
	}
	return nil
}

type DeviceListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Devices       map[string]*Device     `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceListResponse) Reset() {
	*x = DeviceListResponse{}
	mi := &file_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceListResponse) ProtoMessage() {}

func (x *DeviceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceListResponse.ProtoReflect.Descriptor instead.
func (*DeviceListResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceListResponse) GetDevices() map[string]*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SenderId      string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *PingRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PingRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ResponderId   string                 `protobuf:"bytes,2,opt,name=responder_id,json=responderId,proto3" json:"responder_id,omitempty"`
	Healthy       bool                   `protobuf:"varint,3,opt,name=healthy,proto3" json:"healthy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *PingResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PingResponse) GetResponderId() string {
	if x != nil {
		return x.ResponderId
	}
	return ""
}

func (x *PingResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

var File_api_proto protoreflect.FileDescriptor

const file_api_proto_rawDesc = "" +
	"\n" +
	"\tapi.proto\x12\x06Vendor\"O\n" +
	"\vInitRequest\x12\x19\n" +
	"\bdpu_mode\x18\x01 \x01(\bR\adpuMode\x12%\n" +
	"\x0edpu_identifier\x18\x02 \x01(\tR\rdpuIdentifier\",\n" +
	"\x06IpPort\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\"9\n" +
	"\tNFRequest\x12\x14\n" +
	"\x05input\x18\x01 \x01(\tR\x05input\x12\x16\n" +
	"\x06output\x18\x02 \x01(\tR\x06output\"\a\n" +
	"\x05Empty\" \n" +
	"\aVfCount\x12\x15\n" +
	"\x06vf_cnt\x18\x01 \x01(\x05R\x05vfCnt\"\"\n" +
	"\fTopologyInfo\x12\x12\n" +
	"\x04node\x18\x01 \x01(\tR\x04node\"b\n" +
	"\x06Device\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x16\n" +
	"\x06health\x18\x02 \x01(\tR\x06health\x120\n" +
	"\btopology\x18\x03 \x01(\v2\x14.Vendor.TopologyInfoR\btopology\"\xa3\x01\n" +
	"\x12DeviceListResponse\x12A\n" +
	"\adevices\x18\x01 \x03(\v2'.Vendor.DeviceListResponse.DevicesEntryR\adevices\x1aJ\n" +
	"\fDevicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12$\n" +
	"\x05value\x18\x02 \x01(\v2\x0e.Vendor.DeviceR\x05value:\x028\x01\"H\n" +
	"\vPingRequest\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\"i\n" +
	"\fPingResponse\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12!\n" +
	"\fresponder_id\x18\x02 \x01(\tR\vresponderId\x12\x18\n" +
	"\ahealthy\x18\x03 \x01(\bR\ahealthy2?\n" +
	"\x10LifeCycleService\x12+\n" +
	"\x04Init\x12\x13.Vendor.InitRequest\x1a\x0e.Vendor.IpPort2\x8e\x01\n" +
	"\x16NetworkFunctionService\x129\n" +
	"\x15CreateNetworkFunction\x12\x11.Vendor.NFRequest\x1a\r.Vendor.Empty\x129\n" +
	"\x15DeleteNetworkFunction\x12\x11.Vendor.NFRequest\x1a\r.Vendor.Empty2w\n" +
	"\rDeviceService\x127\n" +
	"\n" +
	"GetDevices\x12\r.Vendor.Empty\x1a\x1a.Vendor.DeviceListResponse\x12-\n" +
	"\tSetNumVfs\x12\x0f.Vendor.VfCount\x1a\x0f.Vendor.VfCount2E\n" +
	"\x10HeartbeatService\x121\n" +
	"\x04Ping\x12\x13.Vendor.PingRequest\x1a\x14.Vendor.PingResponseB/Z-github.com/openshift/dpu-operator/api/dpu-apib\x06proto3"

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData []byte
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_rawDesc), len(file_api_proto_rawDesc)))
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_proto_goTypes = []any{
	(*InitRequest)(nil),        // 0: Vendor.InitRequest
	(*IpPort)(nil),             // 1: Vendor.IpPort
	(*NFRequest)(nil),          // 2: Vendor.NFRequest
	(*Empty)(nil),              // 3: Vendor.Empty
	(*VfCount)(nil),            // 4: Vendor.VfCount
	(*TopologyInfo)(nil),       // 5: Vendor.TopologyInfo
	(*Device)(nil),             // 6: Vendor.Device
	(*DeviceListResponse)(nil), // 7: Vendor.DeviceListResponse
	(*PingRequest)(nil),        // 8: Vendor.PingRequest
	(*PingResponse)(nil),       // 9: Vendor.PingResponse
	nil,                        // 10: Vendor.DeviceListResponse.DevicesEntry
}
var file_api_proto_depIdxs = []int32{
	5,  // 0: Vendor.Device.topology:type_name -> Vendor.TopologyInfo
	10, // 1: Vendor.DeviceListResponse.devices:type_name -> Vendor.DeviceListResponse.DevicesEntry
	6,  // 2: Vendor.DeviceListResponse.DevicesEntry.value:type_name -> Vendor.Device
	0,  // 3: Vendor.LifeCycleService.Init:input_type -> Vendor.InitRequest
	2,  // 4: Vendor.NetworkFunctionService.CreateNetworkFunction:input_type -> Vendor.NFRequest
	2,  // 5: Vendor.NetworkFunctionService.DeleteNetworkFunction:input_type -> Vendor.NFRequest
	3,  // 6: Vendor.DeviceService.GetDevices:input_type -> Vendor.Empty
	4,  // 7: Vendor.DeviceService.SetNumVfs:input_type -> Vendor.VfCount
	8,  // 8: Vendor.HeartbeatService.Ping:input_type -> Vendor.PingRequest
	1,  // 9: Vendor.LifeCycleService.Init:output_type -> Vendor.IpPort
	3,  // 10: Vendor.NetworkFunctionService.CreateNetworkFunction:output_type -> Vendor.Empty
	3,  // 11: Vendor.NetworkFunctionService.DeleteNetworkFunction:output_type -> Vendor.Empty
	7,  // 12: Vendor.DeviceService.GetDevices:output_type -> Vendor.DeviceListResponse
	4,  // 13: Vendor.DeviceService.SetNumVfs:output_type -> Vendor.VfCount
	9,  // 14: Vendor.HeartbeatService.Ping:output_type -> Vendor.PingResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_rawDesc), len(file_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
